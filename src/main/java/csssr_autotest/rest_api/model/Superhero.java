/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package csssr_autotest.rest_api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * Superhero
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-21T07:45:34.395Z")
public class Superhero {
  @SerializedName("birthDate")
  private LocalDate birthDate = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("fullName")
  private String fullName = null;

  /**
   * Gender
   */
  @JsonAdapter(GenderEnum.Adapter.class)
  public enum GenderEnum {
    F("F"),
    
    M("M");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String text) {
      for (GenderEnum b : GenderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GenderEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gender")
  private GenderEnum gender = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("mainSkill")
  private String mainSkill = null;

  @SerializedName("phone")
  private String phone = null;

  public Superhero birthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Birth date
   * @return birthDate
  **/
  @ApiModelProperty(example = "2019-02-21", required = true, value = "Birth date")
  public LocalDate getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }

  public Superhero city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @ApiModelProperty(example = "New York", required = true, value = "City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Superhero fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Full name
   * @return fullName
  **/
  @ApiModelProperty(example = "Doctor Strange", required = true, value = "Full name")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public Superhero gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Gender
   * @return gender
  **/
  @ApiModelProperty(example = "F", required = true, value = "Gender")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public Superhero id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of superhero
   * @return id
  **/
  @ApiModelProperty(example = "122", required = true, value = "Identifier of superhero")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Superhero mainSkill(String mainSkill) {
    this.mainSkill = mainSkill;
    return this;
  }

   /**
   * Main skill of superhero
   * @return mainSkill
  **/
  @ApiModelProperty(example = "Magic", required = true, value = "Main skill of superhero")
  public String getMainSkill() {
    return mainSkill;
  }

  public void setMainSkill(String mainSkill) {
    this.mainSkill = mainSkill;
  }

  public Superhero phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone
   * @return phone
  **/
  @ApiModelProperty(example = "+74998884433", value = "Phone")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Superhero superhero = (Superhero) o;
    return Objects.equals(this.birthDate, superhero.birthDate) &&
        Objects.equals(this.city, superhero.city) &&
        Objects.equals(this.fullName, superhero.fullName) &&
        Objects.equals(this.gender, superhero.gender) &&
        Objects.equals(this.id, superhero.id) &&
        Objects.equals(this.mainSkill, superhero.mainSkill) &&
        Objects.equals(this.phone, superhero.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(birthDate, city, fullName, gender, id, mainSkill, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Superhero {\n");
    
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mainSkill: ").append(toIndentedString(mainSkill)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

